#ifndef _WEBSOCKET_WIFI_DEVICE_DRIVER_CONSTS_h
#define _WEBSOCKET_WIFI_DEVICE_DRIVER_CONSTS_h

#include "Wifi_Device_Driver_Consts.h"

static unsigned int const WEBSOCKET_WIFI_DEVICE_DRIVER_TYPE = DEVICE_DRIVER_LAST_MESSAGE + 1010000;
static unsigned int const WEBSOCKET_WIFI_DEVICE_DRIVER_LAST_MESSAGE = WEBSOCKET_WIFI_DEVICE_DRIVER_TYPE;

static void SendHeader(AsyncResponseStream *_response) {

	_response->println(F("<head>"));
	_response->println(F("    <title>Bilderrahme</title>"));
	_response->println(F("    <meta charset=\"utf-8\">"));
	_response->println(F("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">"));
	_response->println(F("    <!--  CSS -->"));
	_response->println(F("    <link rel=\"stylesheet\" href=\"dist/css/kube.min.css\">"));
	_response->println(F("    <!-- SCRIPT -->"));
	_response->println(F("    <script type=\"text/javascript\" src=\"dist/js/jscolor.min.js\"></script>"));
	_response->println(F("    <script>"));
	_response->println(F("        function openTab(evt, tabName) {"));
	_response->println(F("            var i, tabcontent, tablinks;"));
	_response->println(F("            tabcontent = document.getElementsByClassName(\"tabcontent\");"));
	_response->println(F("            for (i = 0; i < tabcontent.length; i++) {"));
	_response->println(F("                tabcontent[i].style.display = \"none\";"));
	_response->println(F("            }"));
	_response->println(F("            tablinks = document.getElementsByClassName(\"tablinks\");"));
	_response->println(F("            for (i = 0; i < tablinks.length; i++) {"));
	_response->println(F("                tablinks[i].className = tablinks[i].className.replace(\" active\", \"\");"));
	_response->println(F("            }"));
	_response->println(F("            document.getElementById(tabName).style.display = \"block\";"));
	_response->println(F("            evt.currentTarget.className += \" active\";"));
	_response->println(F("        }"));
	_response->println(F("        var connection = new WebSocket(\"ws://\" + location.hostname + \":81/\", [\"arduino\"]);"));
	_response->println(F("        connection.onopen = function () { connection.send(\"Connect \" + new Date()); };"));
	_response->println(F("        connection.onerror = function (error) { console.log(\"WebSocket Error \", error); };"));
	_response->println(F("        connection.onmessage = function (e) {"));
	_response->println(F("            if (e.data.indexOf(\"subProtocol\") == -1) {"));
	_response->println(F("                var jsonObject = eval(\"(\" + e.data + \")\");"));
	_response->println(F("                var deviceId = jsonObject._deviceId;"));
	_response->println(F("                var cmdId = jsonObject._cmdId;"));
	_response->println(F("                var value = jsonObject._value;"));
	_response->println(F("                var unit = jsonObject._unit;"));
	_response->println(F("                var search_id = deviceId.toString() + \"_\" + cmdId.toString();"));
	_response->println(F("                document.getElementById(search_id).value = value + \" \" + unit;"));
	_response->println(F("            };"));
	_response->println(F("        };"));
	_response->println(F("        function SendMessage(_deviceId, _cmdId, _value) {"));
	_response->println(F("            var search_id = _deviceId.toString() + \"_\" + _cmdId.toString();"));
	_response->println(F("            var obj = new Object();"));
	_response->println(F("            obj.deviceId = _deviceId;"));
	_response->println(F("            obj.cmdId = _cmdId;"));
	_response->println(F("            if (typeof _value !== \"undefined\") {"));
	_response->println(F("				obj.value = _value;"));
	_response->println(F("            }"));
	_response->println(F("            else {"));
	_response->println(F("				obj.value = document.getElementById(search_id).value;"));
	_response->println(F("            }"));
	_response->println(F("            var jsonString = JSON.stringify(obj);"));
	_response->println(F("            connection.send(jsonString);"));
	_response->println(F("        };"));
	_response->println(F("    </script>"));
	_response->println(F("    <style>"));
	_response->println(F("        body {"));
	_response->println(F("            font-family: helvetica, arial, sans-serif;"));
	_response->println(F("            margin-left: 5%;"));
	_response->println(F("            margin-right: 5%;"));
	_response->println(F("            background-color: #DFFFDF;"));
	_response->println(F("            min-width: 250px;"));
	_response->println(F("        }"));
	_response->println(F("        .simple-text {"));
	_response->println(F("            color: #e3e3e3;"));
	_response->println(F("            text-shadow: 1px 1px 0px black;"));
	_response->println(F("        }"));
	_response->println(F("        div.tab {"));
	_response->println(F("            overflow: hidden;"));
	_response->println(F("            background: -moz-linear-gradient(top, #e3e3e3, #c8c8c8);"));
	_response->println(F("            background: -webkit-gradient(linear, left top, left bottom, from(#e3e3e3), to(#c8c8c8));"));
	_response->println(F("        }"));
	_response->println(F("            div.tab button {"));
	_response->println(F("                background-color: inherit;"));
	_response->println(F("                float: left;"));
	_response->println(F("                border: none;"));
	_response->println(F("                outline: none;"));
	_response->println(F("                padding: 14px 16px;"));
	_response->println(F("                transition: 0.3s;"));
	_response->println(F("                font-size: 17px;"));
	_response->println(F("                color: #454545;"));
	_response->println(F("            }"));
	_response->println(F("                div.tab button:hover {"));
	_response->println(F("                    background-color: #ddd;"));
	_response->println(F("                }"));
	_response->println(F("                div.tab button.active {"));
	_response->println(F("                    background-color: #ccc;"));
	_response->println(F("                }"));
	_response->println(F("        .tabcontent {"));
	_response->println(F("            display: none;"));
	_response->println(F("            padding: 12px 15px;"));
	_response->println(F("        }"));
	_response->println(F("        .container {"));
	_response->println(F("            background: #666;"));
	_response->println(F("            padding-top: 30px;"));
	_response->println(F("        }"));
	_response->println(F("        .head-line {"));
	_response->println(F("            background: #e3e3e3;"));
	_response->println(F("            position: relative;"));
	_response->println(F("            background: -moz-linear-gradient(top, #e3e3e3, #c8c8c8);"));
	_response->println(F("            background: -webkit-gradient(linear, left top, left bottom, from(#e3e3e3), to(#c8c8c8));"));
	_response->println(F("            padding: 10px 20px;"));
	_response->println(F("            margin-left: -10px;"));
	_response->println(F("            width: 70%;"));
	_response->println(F("            max-width: 550px;"));
	_response->println(F("            min-width: 300px;"));
	_response->println(F("            -moz-box-shadow: 1px 1px 3px #292929;"));
	_response->println(F("            -webkit-box-shadow: 1px 1px 3px #292929;"));
	_response->println(F("            color: #454545;"));
	_response->println(F("            text-shadow: 0 1px 0 white;"));
	_response->println(F("        }"));
	_response->println(F("            .head-line.small {"));
	_response->println(F("                width: 30%;"));
	_response->println(F("                margin-left: -20px;"));
	_response->println(F("                min-width: 200px;"));
	_response->println(F("                max-width: 250px;"));
	_response->println(F("                font-size: 1.3em;"));
	_response->println(F("                line-height: 0.8em;"));
	_response->println(F("                font-family: Tahoma, Verdana, Segoe, sans-serif;"));
	_response->println(F("            }"));
	_response->println(F("        .button {"));
	_response->println(F("            font-size: 18px;"));
	_response->println(F("            font-weight: bold;"));
	_response->println(F("            background: #e3e3e3;"));
	_response->println(F("            position: relative;"));
	_response->println(F("            background: -moz-linear-gradient(top, #e3e3e3, #c8c8c8);"));
	_response->println(F("            background: -webkit-gradient(linear, left top, left bottom, from(#e3e3e3), to(#c8c8c8));"));
	_response->println(F("            -moz-box-shadow: 1px 1px 3px #292929;"));
	_response->println(F("            -webkit-box-shadow: 1px 1px 3px #292929;"));
	_response->println(F("            color: #454545;"));
	_response->println(F("            text-shadow: 0 1px 0 white;"));
	_response->println(F("            margin-right: 15px;"));
	_response->println(F("        }"));
	_response->println(F("            .button:hover {"));
	_response->println(F("                background-color: #454545;"));
	_response->println(F("                color: #454545;"));
	_response->println(F("            }"));
	_response->println(F("            .button:active {"));
	_response->println(F("                box-shadow: 0 2px 0 #393939, 0 4px 4px rgba(0, 0, 0, 0.4), 0 2px 5px rgba(0, 0, 0, 0.2) inset;"));
	_response->println(F("                top: 2px;"));
	_response->println(F("            }"));
	_response->println(F("        .desc {"));
	_response->println(F("            color: #454545;"));
	_response->println(F("        }"));
	_response->println(F("    </style>"));
	_response->println(F("</head>"));
}

#endif


